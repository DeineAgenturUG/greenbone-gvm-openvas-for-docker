{%- import "macros/variables.njk" as gbv -%}
{% include "head_variables.njk" %}

ARG SUPVISD=supervisorctl
ARG GVMD_USER
ARG GVMD_PASSWORD
ARG USERNAME=admin
ARG PASSWORD=adminpassword
ARG PASSWORD_FILE=none
ARG TIMEOUT=15
ARG DEBUG=N
ARG RELAYHOST=smtp
ARG SMTPPORT=25
ARG AUTO_SYNC=YES
ARG AUTO_SYNC_ON_START=YES
ARG CERTIFICATE=none
ARG CERTIFICATE_KEY=none
ARG HTTPS=true
ARG TZ=Etc/UTC
ARG SSHD=false
ARG DB_PASSWORD=none

ARG INSTALL_PREFIX=/usr
ARG SOURCE_DIR=/source
ARG BUILD_DIR=/build
ARG INSTALL_DIR=/install
ARG DESTDIR=/install

{{ gbv.from(gvm_build.IMAGE.IMAGE_BUILD+build_target, 'build_base', 'build') }}
{{ gbv.args_empty(gvm_build.BUILD_ENV) -}}
{{ gbv.args_empty(gvm_build.VERSION) -}}

COPY --from={{ gvm_build.IMAGE.IMAGE_BUILD }}{{ build_target }}:build_gvm_libs / /
RUN --mount=type=cache,mode=0755,target=/root/.dl \
    echo "/usr/local/lib" >/etc/ld.so.conf.d/openvas.conf && ldconfig \
    && wget -N -q -O "/root/.dl/gvmd-${GVMD_VERSION}.tar.gz" "https://github.com/greenbone/gvmd/archive/refs/tags/v${GVMD_VERSION}.tar.gz" \
    && wget -N -q -O "/root/.dl/gvmd-${GVMD_VERSION}.tar.gz.asc" "https://github.com/greenbone/gvmd/releases/download/v${GVMD_VERSION}/gvmd-${GVMD_VERSION}.tar.gz.asc" \
    && gpg --verify "/root/.dl/gvmd-${GVMD_VERSION}.tar.gz.asc" "/root/.dl/gvmd-${GVMD_VERSION}.tar.gz" \
    && tar -C ${SOURCE_DIR} -xvzf "/root/.dl/gvmd-${GVMD_VERSION}.tar.gz" \
    && mkdir -p ${BUILD_DIR}/gvmd && cd ${BUILD_DIR}/gvmd \
    && cmake ${SOURCE_DIR}/gvmd-${GVMD_VERSION} \
    -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \
    -DCMAKE_BUILD_TYPE=Release \
    -DLOCALSTATEDIR=/var \
    -DSYSCONFDIR=/etc \
    -DGVM_DATA_DIR=/var \
    -DPostgreSQL_TYPE_INCLUDE_DIR=/usr/include/postgresql \
    -DOPENVAS_DEFAULT_SOCKET=/run/ospd/ospd-openvas.sock \
    -DGVM_FEED_LOCK_PATH=/var/lib/gvm/feed-update.lock \
    -DSYSTEMD_SERVICE_DIR=/lib/systemd/system \
    -DDEFAULT_CONFIG_DIR=/etc/default \
    -DLOGROTATE_DIR=/etc/logrotate.d \
    && make -j$(nproc) \
    && make DESTDIR=${INSTALL_DIR} install


FROM scratch
{{ gbv.arg('INSTALL_DIR') -}}
COPY --from=build ${INSTALL_DIR}/ /
