name: Docker Build

on:
  push:
    branches: [master, github-action-apk]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [master, dev]

concurrency: ci-${{ github.ref }}

permissions:
  contents: read
  packages: write

jobs:
  build_apks:
    name: Build APKs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # So now you can use Actions' own caching!
      - name: Cache APK Output
        id: restore-cache-apk
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/target
            ${{ github.workspace }}/user.abuild/
          key: ${{ runner.os }}-apks_v2-${{ hashFiles('./aports2/**/APKBUILD') }}
          restore-keys: |
            ${{ runner.os }}-apks_v2-${{ hashFiles('./aports2/**/APKBUILD') }}
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./builder/
          platforms: linux/amd64
          tags: apk-builder:latest
          push: false
          load: true

      - name: Prepare Folders and Secrets for Build
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        id: userid
        shell: bash
        run: echo "::set-output name=author::$(id -u ${USER}):$(id -g ${USER})"

      - name: Prepare Folders and Secrets for Build
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/user.abuild
          mkdir -p ${GITHUB_WORKSPACE}/aports2
          mkdir -p ${GITHUB_WORKSPACE}/target/community/x86_64
          mkdir -p ${GITHUB_WORKSPACE}/target/community/noarch
          chmod -R 777 ${GITHUB_WORKSPACE}/aports2
          chmod -R 777 ${GITHUB_WORKSPACE}/target
          echo 'PACKAGER_PRIVKEY="/home/packager/.abuild/build.rsa"' > ${GITHUB_WORKSPACE}/user.abuild/abuild.conf
          echo "${{ secrets.APKBUILD_RSA }}" > ${GITHUB_WORKSPACE}/user.abuild/build.rsa
          chmod 644 ${GITHUB_WORKSPACE}/user.abuild/build.rsa
          echo "${{ secrets.APKBUILD_RSA_PUB }}" > ${GITHUB_WORKSPACE}/user.abuild/build.rsa.pub
          chmod 644 ${GITHUB_WORKSPACE}/user.abuild/build.rsa.pub

      - name: build linux/amd64
        uses: addnab/docker-run-action@v3
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        with:
          image: apk-builder:latest
          options: |
            --platform linux/amd64
            -e platform=linux/amd64
            -v ${{ github.workspace }}/user.abuild/:/home/packager/.abuild
            -v ${{ github.workspace }}/aports2:/work
            -v ${{ github.workspace }}/target:/target
            -e CHECKSUM=0
          run: |
            sudo chown -R packager:packager /home/packager/.abuild
            sudo chmod 600 /home/packager/.abuild/build.rsa
            sudo cp /home/packager/.abuild/build.rsa.pub /etc/apk/keys/
            sudo chown -R packager:packager /target
            echo '------------------------------------------------'
            ls -lR /etc/apk/keys/
            /home/packager/bin/build.sh

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./builder/
          platforms: linux/arm64
          tags: apk-builder:latest
          push: false
          load: true

      - name: build linux/arm64
        uses: addnab/docker-run-action@v3
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        with:
          image: apk-builder:latest
          options: |
            --platform linux/arm64
            -e platform=linux/arm64
            -v ${{ github.workspace }}/user.abuild/:/home/packager/.abuild
            -v ${{ github.workspace }}/aports2:/work
            -v ${{ github.workspace }}/target:/target
            -e CHECKSUM=0
          run: |
            sudo chown -R packager:packager /home/packager/.abuild
            sudo chmod 600 /home/packager/.abuild/build.rsa
            sudo cp /home/packager/.abuild/build.rsa.pub /etc/apk/keys/
            sudo chown -R packager:packager /target
            /home/packager/bin/build.sh

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./builder/
          platforms: linux/arm/v7
          tags: apk-builder:latest
          push: false
          load: true

      - name: build linux/arm/v7
        uses: addnab/docker-run-action@v3
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        with:
          image: apk-builder:latest
          options: |
            --platform linux/arm/v7
            -e platform=linux/arm/v7
            -v ${{ github.workspace }}/user.abuild/:/home/packager/.abuild
            -v ${{ github.workspace }}/aports2:/work
            -v ${{ github.workspace }}/target:/target
            -e CHECKSUM=0
          run: |
            sudo chown -R packager:packager /home/packager/.abuild
            sudo chmod 600 /home/packager/.abuild/build.rsa
            sudo cp /home/packager/.abuild/build.rsa.pub /etc/apk/keys/
            sudo chown -R packager:packager /target
            /home/packager/bin/build.sh

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./builder/
          platforms: linux/arm/v6
          tags: apk-builder:latest
          push: false
          load: true

      - name: build linux/arm/v6
        uses: addnab/docker-run-action@v3
        if: steps.restore-cache-apk.outputs.cache-hit != 'true'
        with:
          image: apk-builder:latest
          options: |
            --platform linux/arm/v6
            -e platform=linux/arm/v6
            -v ${{ github.workspace }}/user.abuild/:/home/packager/.abuild
            -v ${{ github.workspace }}/aports2:/work
            -v ${{ github.workspace }}/target:/target
            -e CHECKSUM=0
          run: |
            sudo chown -R packager:packager /home/packager/.abuild
            sudo chmod 600 /home/packager/.abuild/build.rsa
            sudo cp /home/packager/.abuild/build.rsa.pub /etc/apk/keys/
            sudo chown -R packager:packager /target
            /home/packager/bin/build.sh

      - uses: actions/upload-artifact@v2
        with:
          name: apk-builds
          path: |
            ${{ github.workspace }}/user.abuild/build.rsa.pub
            ${{ github.workspace }}/target/
